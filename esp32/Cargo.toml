[package]
edition = "2021"
name = "esp32"
version = "0.1.0"
license = "MIT OR Apache-2.0"

[dependencies]

#
# esp32
#
esp-hal             = { git="https://github.com/esp-rs/esp-hal/" }

esp-hal-embassy     = { git="https://github.com/esp-rs/esp-hal/", features = ["integrated-timers"] }
esp-println         = { git="https://github.com/esp-rs/esp-hal/", features = ["log"] }
esp-wifi            = { git="https://github.com/esp-rs/esp-hal/", features = ["esp32c3", "wifi", "async", "embassy-net"] }
esp-backtrace       = { git="https://github.com/esp-rs/esp-hal/", features = ["exception-handler", "panic-handler", "println"] }
esp-storage         = { git="https://github.com/esp-rs/esp-hal/", optional = true }

#
# Embassy
#
embassy-embedded-hal = { workspace = true }
embassy-futures = { workspace = true}
embassy-usb-logger = { workspace = true }
embassy-executor = { workspace = true, features = ["task-arena-size-12288", "executor-thread", "executor-interrupt", "integrated-timers"]  }
embassy-time = { workspace = true, features = ["defmt-timestamp-uptime"] }
embassy-net = { workspace = true, features = ["tcp", "udp", "dhcpv4", "medium-ethernet", "proto-ipv4" ] }
# embassy-net-driver = { workspace = true }
embassy-sync = { workspace = true }

#
# Embedded
#
embedded-hal = { workspace = true }
# embedded-hal-async = { workspace = true}
embedded-io-async = { workspace = true }

heapless = "0.8"
static_cell = { version = "2.1", features = ["nightly"] }
log = { workspace = true }
atomic-polyfill = "1.0.1"



lib_extreme_nostd = { path = "../lib_extreme_nostd/" }
engine_race = { path = "../engine_race/" }

[features]
default = ["esp32c3"]
esp32c3 = ["esp-hal/esp32c3", "esp-backtrace/esp32c3", "esp-hal-embassy/esp32c3", "esp-println/esp32c3", "esp-storage?/esp32c3", "esp-wifi/esp32c3"]
# embassy-generic-timers = ["embassy-time/generic-queue-8"]

[profile.release]
debug = 2
