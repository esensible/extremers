name: Build and Store Artifacts

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  create_release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
      - name: Delete and create new latest release
        id: create_release
        uses: actions/github-script@v5
        with:
          script: |
            const tagName = "latest";
            const releaseName = "Latest Release";
            const releaseBody = "Auto-generated release with latest build artifacts.";

            // Find and delete the existing latest release
            const releases = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            const latestRelease = releases.data.find(release => release.tag_name === tagName);
            if (latestRelease) {
              await github.rest.repos.deleteRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
                release_id: latestRelease.id,
              });
            }

            // Create a new latest release
            const newRelease = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: tagName,
              name: releaseName,
              body: releaseBody,
            });

            return newRelease.data.upload_url;
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    needs: create_release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Run build
        run: npm run build

      - name: Archive artifacts
        run: |
          mkdir -p artifacts
          cp -R dist/* artifacts/
          zip -r artifact.zip artifacts/

      - name: Upload artifacts to GitHub release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./artifact.zip
          asset_name: artifact.zip
          asset_content_type: application/zip
